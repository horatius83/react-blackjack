[{"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\index.tsx":"1","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\reportWebVitals.ts":"2","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\App.tsx":"3","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\GameComponent.tsx":"4","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\player.ts":"5","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\DealerComponent.tsx":"6","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\game.ts":"7","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\HandsComponent.tsx":"8","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\deck.ts":"9","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\card.ts":"10","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\CardBackComponent.tsx":"11","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\CardComponent.tsx":"12","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\PlayerControlsComponent.tsx":"13","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\RulesComponent.tsx":"14","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\GameOverComponent.tsx":"15","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\hand.ts":"16","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\BetComponent.tsx":"17"},{"size":517,"mtime":1612145732736,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1612145732739,"results":"20","hashOfConfig":"19"},{"size":240,"mtime":1612727063026,"results":"21","hashOfConfig":"19"},{"size":6188,"mtime":1615649479849,"results":"22","hashOfConfig":"19"},{"size":373,"mtime":1613690793473,"results":"23","hashOfConfig":"19"},{"size":858,"mtime":1612727063027,"results":"24","hashOfConfig":"19"},{"size":11303,"mtime":1615644639883,"results":"25","hashOfConfig":"19"},{"size":2914,"mtime":1615649265721,"results":"26","hashOfConfig":"19"},{"size":1976,"mtime":1613518384150,"results":"27","hashOfConfig":"19"},{"size":2025,"mtime":1612145732736,"results":"28","hashOfConfig":"19"},{"size":257,"mtime":1612145732733,"results":"29","hashOfConfig":"19"},{"size":379,"mtime":1612145732733,"results":"30","hashOfConfig":"19"},{"size":889,"mtime":1612727063029,"results":"31","hashOfConfig":"19"},{"size":3882,"mtime":1615343558785,"results":"32","hashOfConfig":"19"},{"size":216,"mtime":1614534951913,"results":"33","hashOfConfig":"19"},{"size":383,"mtime":1615342124380,"results":"34","hashOfConfig":"19"},{"size":1117,"mtime":1615650259794,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"7f3kv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\index.tsx",[],["72","73"],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\reportWebVitals.ts",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\App.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\GameComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\player.ts",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\DealerComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\game.ts",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\HandsComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\deck.ts",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\card.ts",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\CardBackComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\CardComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\PlayerControlsComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\RulesComponent.tsx",["74"],"import { ChangeEvent, useState } from \"react\";\r\nimport { Rules, SurrenderRules } from \"../models/game\";\r\n\r\nconst surrenderToString = new Map<SurrenderRules, string>([\r\n    [SurrenderRules.No, \"None\"],\r\n    [SurrenderRules.Early, \"Early\"],\r\n    [SurrenderRules.Late, \"Late\"]\r\n\r\n]);\r\n\r\nconst stringToSurrender = new Map<string, SurrenderRules>([\r\n    [\"None\", SurrenderRules.No],\r\n    [\"Early\", SurrenderRules.Early],\r\n    [\"Late\", SurrenderRules.Late]\r\n]);\r\n\r\nexport function RulesComponent(props: {rules: Rules, submit: (rules: Rules) => void}) {\r\n    const surrenderRules = surrenderToString.get(props.rules.surrenderRules) as string;\r\n    const [rules, setRules] = useState({...props.rules});\r\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        props.submit({\r\n           ...rules,\r\n           surrenderRules: stringToSurrender.get(surrenderRules) as SurrenderRules\r\n        });\r\n    };\r\n    const eventAsInt = (f: (rules: Rules, i: number) => void): ((event: React.FormEvent<HTMLInputElement>) => void) => {\r\n        return (event: React.FormEvent<HTMLInputElement>) => {\r\n            const newRules = {...rules};\r\n            f(newRules, parseInt(event.currentTarget.value));\r\n            setRules(newRules);\r\n        }\r\n    };\r\n    const onMinimumBet = eventAsInt((rules, x) => rules.minimumBet = x);\r\n    const onMaximumBet = eventAsInt((rules, x) => rules.maximumBet = x);\r\n    const onNumberOfDecks = eventAsInt((rules, x) => rules.numberOfDecks = x);\r\n    const onBlackjackPayoutNumerator = eventAsInt((rules, x) => rules.blackJackPayout.numerator = x);\r\n    const onBlackjackPayoutDenominator = eventAsInt((rules, x) => rules.blackJackPayout.denominator = x);\r\n    const onNumberOfSplits = eventAsInt((rules, x) => rules.numberOfSplits = x);\r\n    const onSurrenderRules = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        const newRules = {...rules};\r\n        newRules.surrenderRules = stringToSurrender.get(event.currentTarget.value) as SurrenderRules;\r\n        setRules(newRules);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Game Rules</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <input type=\"submit\" value=\"Begin\" />\r\n                </div>\r\n                <div>\r\n                    <label>Minimum Bet: <input type=\"number\" step=\"10\" min=\"0\" value={rules.minimumBet} onChange={onMinimumBet}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Maximum Bet: <input type=\"number\" step=\"10\" min={rules.minimumBet} value={rules.maximumBet} onChange={onMaximumBet}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Number of Decks: <input type=\"number\" min=\"1\" value={rules.numberOfDecks} onChange={onNumberOfDecks}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Blackjack Payout: \r\n                        <input type=\"number\" value={rules.blackJackPayout.numerator} onChange={onBlackjackPayoutNumerator}/> to\r\n                        <input type=\"number\" value={rules.blackJackPayout.denominator} onChange={onBlackjackPayoutDenominator}/>\r\n                    </label> \r\n                </div>\r\n                <div>\r\n                    <label>Number of Splits: <input type=\"number\" min=\"0\" value={rules.numberOfSplits} onChange={onNumberOfSplits}/></label>\r\n                </div>\r\n                {/*<div>\r\n                    <label>Surrender Rules: \r\n                        <select onChange={onSurrenderRules}>\r\n                            <option value=\"None\">None</option> \r\n                            <option value=\"Early\">Early</option>\r\n                            <option value=\"Late\">Late</option>\r\n                        </select>\r\n                    </label>\r\n                </div>*/}\r\n            </form>\r\n        </>\r\n    );\r\n}","C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\GameOverComponent.tsx",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\models\\hand.ts",[],"C:\\Users\\horat\\Documents\\github\\react-blackjack\\typescript-blackjack-app\\src\\components\\BetComponent.tsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":40,"column":11,"nodeType":"81","messageId":"82","endLine":40,"endColumn":27},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"@typescript-eslint/no-unused-vars","'onSurrenderRules' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]