[{"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\App.tsx":"1","C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\components\\CardComponent.tsx":"2","C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\components\\RulesComponent.tsx":"3","C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\models\\hand.ts":"4","C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\components\\PlayerControlsComponent.tsx":"5","C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\reportWebVitals.ts":"6","C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\models\\game.ts":"7"},{"size":240,"mtime":1612673148318,"results":"8","hashOfConfig":"9"},{"size":379,"mtime":1612056954185,"results":"10","hashOfConfig":"9"},{"size":4591,"mtime":1615689729097,"results":"11","hashOfConfig":"9"},{"size":383,"mtime":1615689729170,"results":"12","hashOfConfig":"9"},{"size":889,"mtime":1612661983260,"results":"13","hashOfConfig":"9"},{"size":425,"mtime":1611457586461,"results":"14","hashOfConfig":"9"},{"size":11303,"mtime":1615689729153,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6ueq79",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\App.tsx",[],["33","34"],"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\components\\CardComponent.tsx",[],"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\components\\RulesComponent.tsx",["35"],"import React, { ChangeEvent, useState } from \"react\";\r\nimport { Rules, SurrenderRules } from \"../models/game\";\r\n\r\nconst surrenderToString = new Map<SurrenderRules, string>([\r\n    [SurrenderRules.No, \"None\"],\r\n    [SurrenderRules.Early, \"Early\"],\r\n    [SurrenderRules.Late, \"Late\"]\r\n\r\n]);\r\n\r\nconst stringToSurrender = new Map<string, SurrenderRules>([\r\n    [\"None\", SurrenderRules.No],\r\n    [\"Early\", SurrenderRules.Early],\r\n    [\"Late\", SurrenderRules.Late]\r\n]);\r\n\r\nexport function RulesComponent(props: {rules: Rules, money: {starting: number, minimum: number}, submit: (rules: Rules, startingMoney: number) => void}) {\r\n    const surrenderRules = surrenderToString.get(props.rules.surrenderRules) as string;\r\n    const [rules, setRules] = useState({...props.rules});\r\n    const [startingMoney, setMoney] = useState(props.money.starting);\r\n    const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        props.submit({\r\n           ...rules,\r\n           surrenderRules: stringToSurrender.get(surrenderRules) as SurrenderRules\r\n        }, startingMoney);\r\n    };\r\n    const eventAsInt = (f: (rules: Rules, i: number) => void): ((event: React.FormEvent<HTMLInputElement>) => void) => {\r\n        return (event: React.FormEvent<HTMLInputElement>) => {\r\n            const newRules = {...rules};\r\n            f(newRules, parseInt(event.currentTarget.value));\r\n            setRules(newRules);\r\n        }\r\n    };\r\n    const onMinimumBet = eventAsInt((rules, x) => rules.minimumBet = x);\r\n    const onMaximumBet = eventAsInt((rules, x) => rules.maximumBet = x);\r\n    const onNumberOfDecks = eventAsInt((rules, x) => rules.numberOfDecks = x);\r\n    const onBlackjackPayoutNumerator = eventAsInt((rules, x) => rules.blackJackPayout.numerator = x);\r\n    const onBlackjackPayoutDenominator = eventAsInt((rules, x) => rules.blackJackPayout.denominator = x);\r\n    const onNumberOfSplits = eventAsInt((rules, x) => rules.numberOfSplits = x);\r\n    const onSurrenderRules = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        const newRules = {...rules};\r\n        newRules.surrenderRules = stringToSurrender.get(event.currentTarget.value) as SurrenderRules;\r\n        setRules(newRules);\r\n    };\r\n    const moneyChanged = (event: React.FormEvent<HTMLInputElement>) => {\r\n        const money = parseInt(event.currentTarget.value);\r\n        setMoney(money);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Game Rules</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <input type=\"submit\" value=\"Begin\" />\r\n                </div>\r\n                <div>\r\n                    <label>Minimum Bet: <input type=\"number\" step=\"10\" min=\"0\" value={rules.minimumBet} onChange={onMinimumBet}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Maximum Bet: <input type=\"number\" step=\"10\" min={rules.minimumBet} value={rules.maximumBet} onChange={onMaximumBet}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Number of Decks: <input type=\"number\" min=\"1\" value={rules.numberOfDecks} onChange={onNumberOfDecks}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Blackjack Payout: \r\n                        <input type=\"number\" value={rules.blackJackPayout.numerator} onChange={onBlackjackPayoutNumerator}/> to\r\n                        <input type=\"number\" value={rules.blackJackPayout.denominator} onChange={onBlackjackPayoutDenominator}/>\r\n                    </label> \r\n                </div>\r\n                <div>\r\n                    <label>Number of Splits: <input type=\"number\" min=\"0\" value={rules.numberOfSplits} onChange={onNumberOfSplits}/></label>\r\n                </div>\r\n                <div>\r\n                    <label>Starting Money: $<input \r\n                        type=\"number\" \r\n                        min={props.money.minimum} \r\n                        value={startingMoney} \r\n                        onChange={(event) => moneyChanged(event)}\r\n                        step={10}>\r\n                    </input></label>\r\n                </div>\r\n                {/*<div>\r\n                    <label>Surrender Rules: \r\n                        <select onChange={onSurrenderRules}>\r\n                            <option value=\"None\">None</option> \r\n                            <option value=\"Early\">Early</option>\r\n                            <option value=\"Late\">Late</option>\r\n                        </select>\r\n                    </label>\r\n                </div>*/}\r\n            </form>\r\n        </>\r\n    );\r\n}",["36","37"],"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\models\\hand.ts",[],"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\components\\PlayerControlsComponent.tsx",[],"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Horatius83\\Documents\\GitHub\\react-blackjack\\typescript-blackjack-app\\src\\models\\game.ts",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":41,"column":11,"nodeType":"44","messageId":"45","endLine":41,"endColumn":27},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"@typescript-eslint/no-unused-vars","'onSurrenderRules' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]